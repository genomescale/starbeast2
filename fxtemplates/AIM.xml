<beast version="2.0" namespace="beast.app.beauti:beast.pkgmgmt:beast.base.core:beast.base.inference:beast.base.evolution.branchratemodel:beast.base.evolution.speciation:beast.base.evolution.tree.coalescent:beast.pkgmgmt:beast.base.core:beast.base.inference.util:beast.evolution.nuc:beast.base.evolution.operator:beast.base.inference.operator:beast.base.evolution.sitemodel:beast.base.evolution.substitutionmodel:beast.base.evolution.likelihood:beast.evolution:beast.base.math.distributions" templateinfo="Template for the AIM model of speciation with gene flow.">

<map name="connect" reserved="true">beastfx.app.inputeditor.BeautiConnector</map>
<map name="subtemplate" reserved="true">beastfx.app.inputeditor.BeautiSubTemplate</map>
<map name="Uniform">beast.base.inference.distribution.Uniform</map>
<map name="Normal">beast.base.inference.distribution.Normal</map>
<map name="OneOnX">beast.base.inference.distribution.OneOnX</map>
<map name="LogNormal">beast.base.inference.distribution.LogNormalDistributionModel</map>
<map name="Exponential">beast.base.inference.distribution.Exponential</map>
<map name="Gamma">beast.base.inference.distribution.Gamma</map>
<map name="Beta">beast.base.inference.distribution.Beta</map>
<map name="LaplaceDistribution">beast.base.inference.distribution.LaplaceDistribution</map>
<map name="InverseGamma">beast.base.inference.distribution.InverseGamma</map>
<map name="prior">beast.base.inference.distribution.Prior</map>

	<beauticonfig spec="BeautiConfig"
		inputLabelMap="beast.base.inference.MCMC.operator=Operators,
			beast.base.inference.MCMC.logger=Loggers,
			beast.base.evolution.sitemodel.SiteModel.mutationRate=Substitution Rate,
			beast.base.evolution.speciation.SpeciesTreePrior.gammaParameter=Population Mean"
		inlinePlugins ="beast.base.inference.MCMC.distribution,
			beast.base.evolution.sitemodel.SiteModel.substModel,
			beast.base.evolution.tree.coalescent.ExponentialGrowth,
			beast.base.evolution.tree.coalescent.ConstantPopulation,
			beast.base.evolution.tree.coalescent.Coalescent,
			beast.base.inference.State.stateNode"
		collapsedPlugins ="beast.base.inference.MCMC.logger"
		suppressPlugins = "beast.base.inference.MCMC.operator,
			beast.base.inference.MCMC.operatorschedule,
			beast.base.inference.MCMC.state,
			beast.base.inference.MCMC.distribution,
			beast.base.inference.MCMC.init,
			beast.base.evolution.speciation.BirthDeathGernhard08Model.treeIntervals,
			beast.base.evolution.speciation.BirthDeathGernhard08Model.type,
			beast.base.evolution.speciation.BirthDeathGernhard08Model.sampleProbability,
			beast.base.evolution.speciation.BirthDeathGernhard08Model.tree,
			beast.evolution.speciation.SABirthDeathModel.removalProbability,
			beast.evolution.speciation.SABirthDeathModel.treeIntervals,
			beast.evolution.speciation.SABirthDeathModel.birthRate,
			beast.evolution.speciation.SABirthDeathModel.deathRate,
			beast.evolution.speciation.SABirthDeathModel.samplingRate,
			beast.evolution.speciation.SABirthDeathModel.conditioningOnRoot,
			beast.evolution.speciation.SABirthDeathModel.tree,
			beast.base.evolution.tree.Tree,
			beast.base.evolution.tree.Tree.trait,
			beast.base.evolution.tree.Tree.taxa,
			beast.base.evolution.tree.Tree.taxonset,
			beast.base.evolution.tree.coalescent.RandomTree.trait,
			beast.base.evolution.tree.coalescent.RandomTree.initial,
			beast.base.evolution.tree.coalescent.RandomTree.taxa,
			beast.base.evolution.tree.coalescent.RandomTree.taxonset,
			beast.base.evolution.tree.coalescent.RandomTree.estimate,
			beast.base.evolution.tree.TreeParser.initial,
			beast.base.evolution.tree.TreeParser.taxa,
			beast.base.evolution.tree.TreeParser.taxonset,
			beast.base.evolution.tree.TreeParser.trait,
			beast.base.evolution.tree.TreeParser.estimate,
			beast.base.evolution.tree.ClusterTree.initial,
			beast.base.evolution.tree.ClusterTree.taxa,
			beast.base.evolution.tree.ClusterTree.taxonset,
			beast.base.evolution.tree.ClusterTree.trait,
			beast.base.evolution.tree.ClusterTree.estimate,
			beast.base.evolution.substitutionmodel.WAG.rates,
			beast.base.evolution.substitutionmodel.WAG.frequencies,
			beast.base.evolution.substitutionmodel.JTT.rates,
			beast.base.evolution.substitutionmodel.JTT.frequencies,
			beast.base.evolution.substitutionmodel.Blosum62.rates,
			beast.base.evolution.substitutionmodel.Blosum62.frequencies,
			beast.base.evolution.substitutionmodel.Dayhoff.rates,
			beast.base.evolution.substitutionmodel.Dayhoff.frequencies,
			beast.base.evolution.substitutionmodel.CPREV.rates,
			beast.base.evolution.substitutionmodel.CPREV.frequencies,
			beast.base.evolution.substitutionmodel.MTREV.rates,
			beast.base.evolution.substitutionmodel.MTREV.frequencies,
			beast.base.evolution.substitutionmodel.GTR.rates,
			beast.base.evolution.substitutionmodel.JukesCantor.frequencies,
			beast.base.inference.distribution.Prior.x,
			beast.base.evolution.tree.MRCAPrior.tree,
			beast.base.evolution.tree.MRCAPrior.monophyletic,
			beast.base.evolution.tree.MRCAPrior.taxonset,
			beast.base.evolution.branchratemodel.UCRelaxedClockModel.tree,
			beast.base.evolution.branchratemodel.UCRelaxedClockModel.rateCategories,
			beast.base.evolution.branchratemodel.RandomLocalClockModel.tree,
			beast.base.evolution.branchratemodel.RandomLocalClockModel.meanRate,
			beast.base.evolution.branchratemodel.RandomLocalClockModel.indicators,
			beast.base.evolution.operator.ScaleOperator.indicator,
			beast.base.inference.Operator.weight,
			beast.base.evolution.speciation.YuleModel.treeIntervals,
			beast.base.evolution.speciation.YuleModel.useTipDates,
			beast.base.evolution.speciation.YuleModel.tree,
			beast.base.inference.Logger.model,
			starbeast2.GeneTreeWithMigration.tree,
			starbeast2.GeneTreeWithMigration.populationModel,
			starbeast2.UncorrelatedRates.rates,
			starbeast2.UncorrelatedRates.noCache,
			starbeast2.RandomLocalRates.rates,
			starbeast2.RandomLocalRates.noCache,
			starbeast2.ConstantWithGeneFlow.migrationModel"
		buttonLabelMap="beast.app.beauti.BeautiInitDlg.&gt;&gt; details=Edit parameters">

		<panel spec="BeautiPanelConfig" panelname="Partitions" tiptext="Data Partitions" path="distribution/distribution[id='likelihood']/distribution/data" hasPartitions="none" icon="2220.pngx" forceExpansion="FALSE" type="beast.base.evolution.alignment.Alignment"/>
		<mergepoint id="aux-partitions-panels"/>

		<panel spec="BeautiPanelConfig" panelname="Taxon sets" tiptext="Specify taxon sets that make up species" path="operator[id='coordinatedUniform.t:Species']/speciesTree/taxonset" hasPartitions="none" icon="1.pngx" forceExpansion="TRUE"/>

		<!-- <panel spec="BeautiPanelConfig" panelname="Tip Dates" tiptext="Allows to specify date that a taxon was sampled" path="operator[id='coordinatedUniform.t:Species']/speciesTree" hasPartitions="none" icon="2.png.x" forceExpansion="TRUE"/> -->
		<!-- <mergepoint id="aux-tipdates-panels"/> -->

		<panel spec="BeautiPanelConfig" panelname="Gene Ploidy" tiptext="The ploidy for each gene (locus)" path="distribution/distribution[id='speciescoalescent']/distribution" hasPartitions="none" icon="2.pngx" forceExpansion="TRUE"/>

		<panel spec="BeautiPanelConfig" panelname="AIM Model" tiptext="Settings for the AIM model" path="init[id='SBI']/populationModel" hasPartitions="none" icon="2.pngx" forceExpansion="TRUE"/>

		<panel spec="BeautiPanelConfig" panelname="Site Model" tiptext="Site model and substitution model specifications" path="siteModel" hasPartitions="SiteModel" icon="3.pngx" forceExpansion="TRUE"/>
		<mergepoint id="aux-sitemodel-panels"/>

		<panel spec="BeautiPanelConfig" panelname="Clock Model" tiptext="Clock model" path="branchRateModel" hasPartitions="ClockModel" icon="4.pngx" forceExpansion="TRUE"/>
		<mergepoint id="aux-clockmodel-panels"/>

		<panel spec="BeautiPanelConfig" panelname="Initialization" tiptext="Initial state" path="state/stateNode" hasPartitions="none" icon="6.pngx" forceExpansion="TRUE_START_COLLAPSED" isVisible="false"/>
		<mergepoint id="aux-initilisation-panels"/>

		<panel spec="BeautiPanelConfig" panelname="Priors" tiptext="Other priors" path="distribution/distribution[id='prior']/distribution" hasPartitions="none" icon="7.pngx" forceExpansion="TRUE_START_COLLAPSED" type="beast.base.inference.Distribution" buttonStatus="ADD_ONLY"/>
		<mergepoint id="aux-priors-panels"/>

		<panel spec="BeautiPanelConfig" panelname="Operators" tiptext="MCMC Operator details" path="operator" hasPartitions="none" icon="8.pngx" forceExpansion="TRUE_START_COLLAPSED" isVisible="false"/>
		<mergepoint id="aux-operators-panels"/>

		<panel spec="BeautiPanelConfig" panelname="MCMC" tiptext="MCMC parameters" path="" hasPartitions="none" icon="9.pngx" forceExpansion="TRUE"/>
		<mergepoint id="aux-panels"/>

		<alignmentProvider id="Import Alignment" spec="StarBeastAlignmentProvider" template="@StarBEASTPartitionTemplate"/>


		<partitiontemplate id="StarBEASTPartitionTemplate" spec="BeautiSubTemplate" class="beast.base.evolution.likelihood.TreeLikelihood" mainid="mcmc">
<![CDATA[
			<geneTree id="geneTree.t:$(n)" ploidy="2.0" spec="starbeast2.GeneTreeWithMigration" populationModel="@popModelAIM.Species" tree="@Tree.t:$(n)"/>

			<stateNode id="strictClockRate.c:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="false"/>

			<!-- site model -->
			<plugin spec="SiteModel" id="SiteModel.s:$(n)" gammaCategoryCount="0">
				<!--substModel will be automatically detected /-->
				<proportionInvariant spec="parameter.RealParameter" id="proportionInvariant.s:$(n)" value="0.0" lower="0" upper="1" estimate="false"/>
				<mutationRate spec="parameter.RealParameter" id="mutationRate.s:$(n)" value="1.0" estimate="true"/>
				<shape spec="parameter.RealParameter" id="gammaShape.s:$(n)" value="1.0" estimate="false"/>
			</plugin>

			<plugin spec="TreeLikelihood" id="treeLikelihood.$(n)">
				<data idref="data"/>
				<tree idref="Tree.t:$(n)"/>
				<siteModel idref="SiteModel.s:$(n)"/>
				<branchRateModel id="StrictClock.c:$(n)" spec="StrictClockModel" clock.rate="@strictClockRate.c:$(n)"/>
			</plugin>

			<!-- tree and its properties -->
			<taxonset id="TaxonSet.$(n)" spec="beast.base.evolution.alignment.TaxonSet" alignment="@$(n)"/>
			<plugin spec="beast.base.evolution.tree.Tree" id="Tree.t:$(n)" taxonset="@TaxonSet.$(n)"/>

			<plugin id="TreeHeight.t:$(n)" spec="beast.base.evolution.tree.TreeHeightLogger" tree="@Tree.t:$(n)"/>

			<prior id="MutationRatePrior.s:$(n)" x="@mutationRate.s:$(n)">
				<distr spec="beast.base.inference.distribution.Uniform"/>
			</prior>

			<prior id="GammaShapePrior.s:$(n)" x="@gammaShape.s:$(n)">
				<distr spec="LogNormalDistributionModel" meanInRealSpace="true" M="1.0" S="2.0"/>
			</prior>

			<prior id="PropInvariantPrior.t:$(n)" x="@proportionInvariant.s:$(n)">
				<distr spec="beast.base.inference.distribution.Uniform" lower="0.0" upper="1.0"/>
			</prior>

			<operator id="proportionInvariantScaler.s:$(n)" spec="ScaleOperator" scaleFactor="0.75" weight="1.0" parameter="@proportionInvariant.s:$(n)"/>
			<operator id="mutationRateScaler.s:$(n)" spec="ScaleOperator" scaleFactor="0.75" weight="1.0" parameter="@mutationRate.s:$(n)"/>
			<operator id="gammaShapeScaler.s:$(n)" scaleFactor="0.75" spec="ScaleOperator" weight="1.0" parameter="@gammaShape.s:$(n)"/>
			<operator id="clockRateScaler.c:$(n)" spec="ScaleOperator" scaleFactor="0.5" weight="3.0" parameter="@strictClockRate.c:$(n)"/>
			<upDownOperator id="clockUpDownOperator.c:$(n)" spec="UpDownOperator" scaleFactor="0.95" weight="3.0">
				<down idref="Tree.t:$(n)"/>
			</upDownOperator>

			<operator id="TreeScaler.t:$(n)" spec="ScaleOperator" scaleFactor="0.95" weight="3.0" tree="@Tree.t:$(n)"/>
			<operator id="TreeRootScaler.t:$(n)" spec="ScaleOperator" scaleFactor="0.7" weight="3.0" tree="@Tree.t:$(n)" rootOnly="true"/>
			<operator id="UniformOperator.t:$(n)" spec="Uniform" weight="15.0" tree="@Tree.t:$(n)"/>
			<operator id="SubtreeSlide.t:$(n)" spec="SubtreeSlide" weight="15.0" gaussian="true" size="0.002" tree="@Tree.t:$(n)"/>
			<operator id="Narrow.t:$(n)" spec="Exchange" isNarrow="true" weight="15.0" tree="@Tree.t:$(n)"/>
			<operator id="Wide.t:$(n)" spec="Exchange" isNarrow="false" weight="15.0" tree="@Tree.t:$(n)"/>
			<operator id="WilsonBalding.t:$(n)" spec="WilsonBalding" weight="15.0" tree="@Tree.t:$(n)"/>

			<logger id="treelog.t:$(n)" spec="beast.base.inference.Logger" logEvery="5000" fileName="$(tree).trees" mode="tree">
				<log id="TreeWithMetaDataLogger.t:$(n)" spec="beast.base.evolution.TreeWithMetaDataLogger" tree="@Tree.t:$(n)"/>
			</logger>
]]>

			<connect srcID="treeLikelihood.$(n)" targetID="likelihood" inputName="distribution" if="isInitializing"/>

			<connect srcID="treelog.t:$(n)" targetID="mcmc" inputName="logger" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>

			<connect srcID="geneTree.t:$(n)" targetID="speciescoalescent" inputName="distribution" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<!-- hack to ensure that treePrior.$(n) is always deleted from prior, since it is already part of speciescoalescent -->
			<connect srcID="geneTree.t:$(n)" targetID="prior" inputName="distribution" if="Tree.t:$(n)/estimate=XXX"/>

			<!-- when FixMeanMutationRatesOperator, the prior is uniform due to the operator -->
			<connect srcID="MutationRatePrior.s:$(n)" targetID="prior" inputName="distribution" if="nooperator(FixMeanMutationRatesOperator) and inposterior(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true"/>

			<connect srcID="Tree.t:$(n)" targetID="state" inputName="stateNode" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="proportionInvariant.s:$(n)" targetID="state" inputName="stateNode" if="inposterior(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true"/>
			<connect srcID="mutationRate.s:$(n)" targetID="state" inputName="stateNode" if="inposterior(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true"/>
			<connect srcID="gammaShape.s:$(n)" targetID="state" inputName="stateNode" if="inposterior(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true"/>
			<connect srcID="strictClockRate.c:$(n)" targetID="state" inputName="stateNode" if="inposterior(Tree.t:$(n)) and strictClockRate.c:$(n)/estimate=true"/>

			<connect srcID="proportionInvariantScaler.s:$(n)" targetID="mcmc" inputName="operator" if="inposterior(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true"/>
			<connect srcID="mutationRateScaler.s:$(n)" targetID="mcmc" inputName="operator" if="inposterior(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true"/>
			<connect srcID="gammaShapeScaler.s:$(n)" targetID="mcmc" inputName="operator" if="inposterior(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true"/>
			<connect srcID="clockRateScaler.c:$(n)" targetID="mcmc" inputName="operator" if="inposterior(strictClockRate.c:$(n)) and strictClockRate.c:$(n)/estimate=true"/>
			<connect srcID="clockUpDownOperator.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(Tree.t:$(n)) and Tree.t:$(n)/estimate=true">
				Scale up substitution rate c:$(n) and scale down tree t:($n)
			</connect>

			<connect srcID="TreeScaler.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="TreeRootScaler.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="UniformOperator.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="SubtreeSlide.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="Narrow.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="Wide.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="WilsonBalding.t:$(n)" targetID="mcmc" inputName="operator" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>

			<connect srcID="treeLikelihood.$(n)" targetID="tracelog" inputName="log" if="inlikelihood(treeLikelihood.$(n))"/>
			<connect srcID="treePrior.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="TreeHeight.t:$(n)" targetID="tracelog" inputName="log" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="proportionInvariant.s:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true"/>
			<connect srcID="mutationRate.s:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true"/>
			<connect srcID="gammaShape.s:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true"/>
			<connect srcID="strictClockRate.c:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(strictClockRate.c:$(n)) and strictClockRate.c:$(n)/estimate=true"/>

			<connect srcID="GammaShapePrior.s:$(n)" targetID="prior" inputName="distribution" if="inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true"/>
			<connect srcID="PropInvariantPrior.s:$(n)" targetID="prior" inputName="distribution" if="inlikelihood(proportionInvariant.s:$(n)) and proportionInvariant.s:$(n)/estimate=true"/>

			<connect srcID="Tree.t:$(n)" targetID="coordinatedUniform.t:Species" inputName="geneTree" if="Tree.t:$(n)/estimate=true"/>
			<connect srcID="Tree.t:$(n)" targetID="coordinatedExponential.t:Species" inputName="geneTree" if="Tree.t:$(n)/estimate=true"/>
			<connect srcID="Tree.t:$(n)" targetID="updownAll:Species" inputName="down" if="inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true"/>
			<connect srcID="strictClockRate.c:$(n)" targetID="updownAll:Species" inputName="up" if="inlikelihood(strictClockRate.c:$(n)) and strictClockRate.c:$(n)/estimate=true"/>

			<!--
			Since "Species" is treated as a separate partition, we need the following
			hacks to get rid of undesirable Tree.t:Species connections
			-->
			<connect srcID="Tree.t:Species" targetID="coordinatedUniform.t:Species" inputName="geneTree" if="Tree.t:$(n)/estimate=XXX"/>
			<connect srcID="Tree.t:Species" targetID="coordinatedExponential.t:Species" inputName="geneTree" if="Tree.t:$(n)/estimate=XXX"/>
			<!-- end hacks -->

			<connect srcID="speciationRate.t:Species" targetID="updownAll:Species" inputName="up" if="inposterior(speciationRate.t:Species) and speciationRate.t:Species/estimate=true"/>

			<connect srcID="SBI" targetID="mcmc" inputName="init" if="inposterior(Tree.t:Species)"/>
			<connect srcID="Tree.t:$(n)" targetID="SBI" inputName="geneTree" if="inposterior(Tree.t:$(n))"/>
			<connect srcID="Tree.t:Species" targetID="SBI" inputName="geneTree" if="Tree.t:$(n)/estimate=XXX"/> <!-- another hack -->
			<connect srcID="Tree.t:Species" targetID="SBI" inputName="speciesTree" if="inposterior(Tree.t:Species)"/>

			<mergepoint id="aux-partitiontemplate"/>
		</partitiontemplate>

		<alignmentProvider id="Add Morphology to Species Tree" spec='StarBeastMorphModelAlignmentProvider' template='@StarBEASTMKTrait'/>

		<subtemplate id='StarBEASTMKTrait' class='beast.base.evolution.alignment.FilteredAlignment' mainid='$(n)'
		suppressInputs = 'morphmodels.evolution.substitutionmodel.LewisMK.stateNumber,
			morphmodels.evolution.substitutionmodel.LewisMK.datatype,
			morphmodels.evolution.substitutionmodel.LewisMK.frequencies,
			morphmodels.evolution.substitutionmodel.LewisMK.proportionInvariant'>

<![CDATA[
			<stateNode id="strictClockRate.c:$(n)" spec="parameter.RealParameter" lower="0.0" value="1.0" estimate="false"/>

			<distribution id="morphTreeLikelihood.$(n)" spec="TreeLikelihood" tree="@Tree.t:Species">
				<data spec="beast.base.evolution.alignment.FilteredAlignment" id="$(n)" filter="0-end">
					<userDataType spec="beast.base.evolution.datatype.StandardData" id="morphDataType.$(n)" />
				</data>
				<siteModel spec="SiteModel" id="morphSiteModel.s:$(n)" gammaCategoryCount="0">
					<substModel spec="LewisMK" id="LewisMK.s:$(n)" datatype="@morphDataType.$(n)"/>
					<mutationRate spec="parameter.RealParameter" id="mutationRate.s:$(n)" value="1.0" estimate="false"/>
					<shape spec="parameter.RealParameter" id="gammaShape.s:$(n)" value="1.0" estimate="false"/>
				</siteModel>
				<branchRateModel id="StrictClock.c:$(n)" spec="StrictClockModel" clock.rate="@strictClockRate.c:$(n)"/>
			</distribution>

			<prior id="MutationRatePrior.s:$(n)" x="@mutationRate.s:$(n)">
				<distr spec="OneOnX"/>
			</prior>

			<prior id="GammaShapePrior.s:$(n)" x="@gammaShape.s:$(n)">
				<distr spec="LogNormalDistributionModel" meanInRealSpace="true" M="1.0" S="2.0"/>
			</prior>

			<operator id="mutationRateScaler.s:$(n)" spec="ScaleOperator" scaleFactor="0.75" weight="1.0" parameter="@mutationRate.s:$(n)"/>
			<operator id="gammaShapeScaler.s:$(n)" scaleFactor="0.75" spec="ScaleOperator" weight="1.0" parameter="@gammaShape.s:$(n)"/>
			<operator id="clockRateScaler.c:$(n)" spec="ScaleOperator" scaleFactor="0.5" weight="3.0" parameter="@strictClockRate.c:$(n)"/>
]]>

			<connect srcID="morphTreeLikelihood.$(n)" targetID="likelihood" inputName="distribution" if="isInitializing"/>
			<connect method="beastfx.app.inputeditor.SiteModelInputEditor.customConnector"/>

			<connect srcID="MutationRatePrior.s:$(n)" targetID="prior" inputName="distribution" if="nooperator(FixMeanMutationRatesOperator) and inposterior(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true"/>

			<connect srcID="mutationRate.s:$(n)" targetID="state" inputName="stateNode" if="inposterior(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true"/>
			<connect srcID="gammaShape.s:$(n)" targetID="state" inputName="stateNode" if="inposterior(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true"/>
			<connect srcID="strictClockRate.c:$(n)" targetID="state" inputName="stateNode" if="inposterior(Tree.t:$(n)) and strictClockRate.c:$(n)/estimate=true"/>

			<connect srcID="mutationRateScaler.s:$(n)" targetID="mcmc" inputName="operator" if="inposterior(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true"/>
			<connect srcID="gammaShapeScaler.s:$(n)" targetID="mcmc" inputName="operator" if="inposterior(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true"/>
			<connect srcID="clockRateScaler.c:$(n)" targetID="mcmc" inputName="operator" if="inposterior(strictClockRate.c:$(n)) and strictClockRate.c:$(n)/estimate=true"/>

			<connect srcID="morphTreeLikelihood.$(n)" targetID="tracelog" inputName="log" if="inlikelihood(morphTreeLikelihood.$(n))"/>
			<connect srcID="mutationRate.s:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(mutationRate.s:$(n)) and mutationRate.s:$(n)/estimate=true"/>
			<connect srcID="gammaShape.s:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true"/>
			<connect srcID="strictClockRate.c:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(strictClockRate.c:$(n)) and strictClockRate.c:$(n)/estimate=true"/>

			<connect srcID="GammaShapePrior.s:$(n)" targetID="prior" inputName="distribution" if="inlikelihood(gammaShape.s:$(n)) and gammaShape.s:$(n)/estimate=true"/>

			<connect srcID="strictClockRate.c:$(n)" targetID="updownAll:Species" inputName="up" if="inlikelihood(strictClockRate.c:$(n)) and strictClockRate.c:$(n)/estimate=true"/>
		</subtemplate>

		<mergepoint id="sbSubstModelTemplates"/>
		<mergepoint id="sbClockModelTemplates"/>
		<mergepoint id="sbTreePriorTemplates"/>
		<mergepoint id="parametricDistributions"/>

	</beauticonfig>

	<taxonset spec="starbeast2.StarBeastTaxonSet" id="taxonsuperset">
		<!--
		need to specify at least one taxon for a TaxonSet, so insert a dummy taxon here
		This one is cleared by the TaxonSetInputEditor
		-->
		<taxon spec="beast.base.evolution.alignment.TaxonSet" id="Beauti2DummyTaxonSet">
			<taxon spec="beast.base.evolution.alignment.Taxon" id="dummyTaxon"/>
		</taxon>
	</taxonset>

	<tree spec="starbeast2.SpeciesTree" id="Tree.t:Species" taxonset="@taxonsuperset" estimate="true"/>

	<!-- framework for main model -->
	<run spec="MCMC" id="mcmc" storeEvery="5000" chainLength="10000000">
		<operatorschedule id="operatorSchedule" spec="OperatorSchedule">
			<!-- assign 20% of all weight to operators that apply to the Species partition -->
			<subschedule id="operatorSubschedule" spec="OperatorSchedule" weight="20" weightIsPercentage="true" operatorPattern="^.*Species$"/>
		</operatorschedule>

		<state storeEvery="5000" id="state">
			<stateNode idref="Tree.t:Species"/>
			<stateNode idref="popSizes.Species"/>
			<stateNode idref="migRates.Species"/>
			<stateNode idref="migIndicators.Species"/>
			<!-- <stateNode idref="migMean.Species"/> -->
			<stateNode idref="popMean.Species"/>
			<stateNode idref="speciationRate.t:Species"/>
		</state>

		<distribution spec="CompoundDistribution" id="posterior">
			<distribution spec="CompoundDistribution" id="speciescoalescent"/>
			<distribution spec="CompoundDistribution" id="prior">
				<!-- species tree priors -->
				<distribution id="YuleModel.t:Species" spec="beast.base.evolution.speciation.YuleModel" tree="@Tree.t:Species">
					<birthDiffRate spec="parameter.RealParameter" id="speciationRate.t:Species" value="1.0" lower="0.0" estimate="true"/>
				</distribution>
				<distribution id="speciationRatePrior.t:Species" spec="beast.base.inference.distribution.Prior" x="@speciationRate.t:Species">
					<distr spec="beast.base.inference.distribution.Uniform" lower="0.0" upper="10000.0"/>
				</distribution>
				<distribution id="popSizesPrior.Species" spec="beast.base.inference.distribution.Prior" x="@popSizes.Species">
					<distr spec="beast.base.inference.distribution.LogNormalDistributionModel" meanInRealSpace="true">
						<M id="popMean.mean" spec="parameter.RealParameter" value="1.0" estimate="false"/>
						<S id="popMean.variance" spec="parameter.RealParameter" value="0.25" estimate="false"/>
					</distr>
				</distribution>
				<distribution id="popMeanPrior.Species" spec="beast.base.inference.distribution.Prior" x="@popMean.Species">
					<distr spec="beast.base.inference.distribution.OneOnX"/>
				</distribution>
				<distribution id="migRatesPrior.Species" spec="beast.base.inference.distribution.Prior" x="@migRates.Species">
					<distr spec="beast.base.inference.distribution.LogNormalDistributionModel" M="1.0" S="1.0" meanInRealSpace="true"/>
				</distribution>
				<!-- <distribution id="migMeanPrior.Species" spec="beast.base.inference.distribution.Prior" x="@migMean.Species">
					<distr spec="beast.base.inference.distribution.OneOnX"/>
				</distribution> -->
				<distribution id="migIndicatorSumPrior.Species" spec="beast.base.inference.distribution.Prior">
					<x id="migIndicatorSum.Species" spec="beast.base.evolution.Sum" arg="@migIndicators.Species"/>
					<distr spec="beast.base.inference.distribution.Poisson" lambda="0.693"/>
				</distribution>
				<mergepoint id="aux-priors"/>
			</distribution>
			<distribution spec="CompoundDistribution" id="likelihood">
				<mergepoint id="aux-likelihoods"/>
			</distribution>
		</distribution>

		<operator id="popSizesSwap.Species" parameter="@popSizes.Species" spec="starbeast2.RealCycle" k="2" optimise="false" weight="3.0"/>
		<operator id="popSizesScale.Species" parameter="@popSizes.Species" scaleFactor="0.5" spec="ScaleOperator" weight="15.0"/>

		<operator id="migRatesScale.Species" parameter="@migRates.Species" scaleFactor="0.5" spec="ScaleOperator" weight="15.0"/>

		<operator id="popMeanScale.Species" parameter="@popMean.Species" scaleFactor="0.75" spec="ScaleOperator" weight="3.0"/>
		<!-- <operator id="migMeanScale.Species" parameter="@migMean.Species" scaleFactor="0.75" spec="ScaleOperator" weight="1.0"/> -->

		<operator id="migIndicatorFlipper.c:$(n)" spec="BitFlipOperator" parameter="@migIndicators.Species" weight="15.0"/>

		<operator id="coordinatedUniform.t:Species" spec="starbeast2.CoordinatedUniform" weight="1.0" speciesTree="@Tree.t:Species"/>
		<operator id="coordinatedExponential.t:Species" spec="starbeast2.CoordinatedExponential" weight="1.0" speciesTree="@Tree.t:Species"/>


		<operator id="SubtreeSlideAndSwap.t:Species" spec="starbeast2.aimoperator.SubtreeSlideAndSwap" size="0.0001" indicator="@migIndicators.Species" m="@migRates.Species" Ne="@popSizes.Species" optimise="true" tree="@Tree.t:Species" weight="50.0"/>
		<operator id="WilsonBalding.t:Species" spec="starbeast2.aimoperator.WilsonBaldingAndSwap" indicator="@migIndicators.Species" m="@migRates.Species" tree="@Tree.t:Species" weight="30.0"/>
		<operator id="Wide.t:Species" spec="starbeast2.aimoperator.ExchangeAndSwap" isNarrow="false" indicator="@migIndicators.Species" m="@migRates.Species" tree="@Tree.t:Species" weight="30.0"/>
		<operator id="Narrow.t:Species" spec="starbeast2.aimoperator.ExchangeAndSwap" indicator="@migIndicators.Species" m="@migRates.Species" tree="@Tree.t:Species" weight="30.0"/>
		<operator id="UniformOperator.t:Species" spec="starbeast2.aimoperator.UniformAndSwap" indicator="@migIndicators.Species" m="@migRates.Species" tree="@Tree.t:Species" weight="5.0"/>

		<operator id="TreeRootScaler.t:Species" spec="ScaleOperator" scaleFactor="0.7" weight="3.0" tree="@Tree.t:Species" rootOnly="true"/>
		<operator id="TreeScaler.t:Species" spec="ScaleOperator" scaleFactor="0.95" weight="3.0" tree="@Tree.t:Species"/>

		<operator id="speciationRateScale.t:Species" spec="ScaleOperator" scaleFactor="0.5" weight="1.0" parameter="@speciationRate.t:Species"/>

		<operator id="updownAll:Species" spec="UpDownOperator" scaleFactor="0.75" weight="1.0">
			<up idref="speciationRate.t:Species"/>
			<down idref="popSizes.Species"/>
			<down idref="Tree.t:Species"/>
		</operator>

		<logger id="tracelog" logEvery="5000" fileName="aim.log" sort="smart">
			<model idref="posterior"/>
			<log idref="posterior"/>
			<log idref="likelihood"/>
			<log idref="prior"/>
			<log idref="speciescoalescent"/>
			<log idref="speciationRate.t:Species"/>
			<log idref="YuleModel.t:Species"/>
			<log idref="popMean.Species"/>
			<log idref="popSizes.Species"/>
			<log idref="migRates.Species"/>
			<log idref="migIndicatorSum.Species"/>
			<log idref="migIndicators.Species"/>
			<log id="TreeHeight.Species" spec="beast.base.evolution.tree.TreeHeightLogger" tree="@Tree.t:Species"/>
			<log id="TreeLength.Species" spec="starbeast2.TreeLengthLogger" tree="@Tree.t:Species"/>
		</logger>

		<logger fileName="species.trees" id="speciesTreeLogger" logEvery="5000" mode="tree">
			<log id="SpeciesTreeLoggerX" spec="starbeast2.SpeciesTreeLoggerWithGeneFlow" populationModel="@popModelAIM.Species"/>
		</logger>

		<logger id="screenlog" logEvery="5000">
			<model idref="posterior"/>
			<log idref="posterior"/>
			<ESS spec="ESS" name="log" arg="@posterior"/>
			<log idref="likelihood"/>
			<log idref="prior"/>
		</logger>

		<init id="SBI" estimate="false" spec="starbeast2.StarBeastInitializer" speciesTree="@Tree.t:Species" birthRate="@speciationRate.t:Species">
			<populationModel id="popModelAIM.Species" spec="starbeast2.ConstantWithGeneFlow" rateIsForward="true">
				<Ne id="popSizes.Species" spec="parameter.RealParameter" value="1.0" estimate="true"/>
				<m id="migRates.Species" spec="parameter.RealParameter" value="1.0" estimate="true"/>
				<NeMean id="popMean.Species" spec="parameter.RealParameter" value="0.005" estimate="true"/>
				<indicator id="migIndicators.Species" spec="parameter.BooleanParameter" value="false" estimate="true"/>
				<migrationModel id="migModel.Species" spec="starbeast2.AllEqual" speciesTree="@Tree.t:Species"/>
				<maxMigrationRateModel id="maxMigModel.Species" spec="starbeast2.Overlap" speciesTree="@Tree.t:Species">
					<effectiveMigrants id="maxMigMean.Species" spec="parameter.RealParameter" value="1.0" estimate="true"/>
				</maxMigrationRateModel>
			</populationModel>
		</init>
	</run>
</beast>
