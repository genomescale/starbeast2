<!-- Build starbeast2. It is also used by Hudson starbeast2 project. JUnit test is available for this build. -->
<project basedir="." default="build_jar_all_starbeast2" name="BUILD_starbeast2">
	<description>
	    Build starbeast2.
	</description>

	<!-- set global properties for this build -->
	<property name="srcstarbeast2" location="src" />
	<property name="buildstarbeast2" location="build" />
	<property name="libstarbeast2" location="lib" />
	<property name="release_dir" value="release" />
	<property name="diststarbeast2" location="${buildstarbeast2}/dist" />
	<property name="beast2path" location="../beast2" />
	<property name="SAPath" location="../sampled-ancestors" />
	<property name="MMPath" location="../morph-models" />
	<property name="libBeast2" location="${beast2path}/lib" />
	<property name="srcBeast2" location="${beast2path}/src" />
	<property name="beast2classpath" location="${beast2path}/build" />
	<property name="SAClasspath" location="${SAPath}/build" />
	<property name="MMClasspath" location="${MMPath}/build" />
	<property name="Add_on_dir" value="${release_dir}/add-on" />

    <import file="${beast2path}/build.xml" />
    <import file="${SAPath}/build.xml" />
    <import file="${MMPath}/build.xml" />

	<property name="main_class_BEAST" value="beast.app.BeastMCMC" />
	<property name="report" value="${buildstarbeast2}/junitreport"/>

	<path id="classpath">
        <pathelement path="${buildstarbeast2}"/>
		<fileset dir="${libBeast2}" includes="*.jar"/>
		<fileset dir="${libstarbeast2}" includes="*.jar"/>
        <pathelement path="${beast2classpath}"/>
        <pathelement path="${SAClasspath}"/>
        <pathelement path="${MMClasspath}"/>
	</path>

	<!-- start -->
	<target name="initstarbeast2">
		<echo message="${ant.project.name}: ${ant.file}" />
	</target>

	<target name="cleanstarbeast2">
    	<delete dir="${buildstarbeast2}" />
	</target>

	<!-- clean previous build, and then compile Java source code, and Juint test -->
	<target name="build_all_starbeast2" depends="cleanstarbeast2,compile-allstarbeast2,junitstarbeast2"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- clean previous build, compile Java source code, and Junit test, and make the beast.jar and beauti.jar -->
	<target name="build_jar_all_starbeast2" depends="cleanstarbeast2,compile-allstarbeast2,junitstarbeast2,dist_all_starbeast2"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- No JUnit Test, clean previous build, compile Java source code, and make the starbeast2.jar and beauti.jar -->
	<target name="build_jar_all_starbeast2_NoJUnitTest" depends="cleanstarbeast2,compile-allstarbeast2,dist_all_starbeast2"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- compile Java source code -->
	<target name="compile-allstarbeast2" depends="initstarbeast2">
	    <!-- Capture the path as a delimited property using the refid attribute -->
	    <property name="myclasspath" refid="classpath"/>
	    <!-- Emit the property to the ant console -->
	    <echo message="Classpath = ${myclasspath}"/>

		<mkdir dir="${buildstarbeast2}" />

		<!-- Compile the java code from ${srcstarbeast2} into ${buildstarbeast2} /bin -->
		<!-- <javac srcdir="${srcstarbeast2}" destdir="${buildstarbeast2}" classpathref="classpath" debug="true" -->
		<javac srcdir="${srcstarbeast2}" destdir="${buildstarbeast2}" classpathref="classpath"
		       fork="true"
		       memoryinitialsize="256m"
		       memorymaximumsize="256m"
			   includeAntRuntime='false'>
			<include name="**/**" />
		</javac>
		<echo message="Successfully compiled." />
	</target>

	<!-- make starbeast2.jar and starbeast2.src.jar -->
	<target name="dist_all_starbeast2" depends="compile-allstarbeast2" description="create starbeast2 jar">
		<!-- Create the distribution directory -->
		<mkdir dir="${diststarbeast2}" />

		<!-- Put everything in ${buildstarbeast2} into the beast.jar file -->
		<jar jarfile="${diststarbeast2}/starbeast2.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${main_class_BEAST}" />
			</manifest>
			<fileset dir="${buildstarbeast2}">
				<include name="**/*.class" />
				<include name="**/*.java" />
			</fileset>
		</jar>
		<jar jarfile="${diststarbeast2}/starbeast2.src.jar">
			<fileset dir="${srcstarbeast2}">
				<include name="**/*.java" />
			</fileset>
        </jar>
		<jar jarfile="${diststarbeast2}/starbeast2.addon.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
			</manifest>
			<fileset dir="${buildstarbeast2}">
				<include name="**/*.class" />
			</fileset>
		</jar>
	</target>

	<!-- JUnit test -->
	<target name="junitstarbeast2">
		<mkdir dir="${report}" />
		<junit printsummary="yes"> <!--showoutput='yes'-->
			<classpath>
				<path refid="classpath" />
				<path location="${buildstarbeast2}" />
			</classpath>

			<formatter type="xml" />

			<test fork="yes" todir="${report}" name="sb2tests.AllTests" />
		</junit>
		<echo message="JUnit test finished." />
	</target>

    <target name="junitreport">
		<junitreport todir="${report}">
			<fileset dir="${report}" includes="*.xml"/>
			<report format="frames" todir="${report}"/>
		</junitreport>
		<echo message="JUnit test report finished." />
	</target>


	<target name="addon"
	        depends="build_jar_all_starbeast2_NoJUnitTest"
	        description="release starbeast2 add-on">

		<delete dir="${Add_on_dir}" />
		<!-- Create the release directory -->
		<mkdir dir="${Add_on_dir}" />
		<mkdir dir="${Add_on_dir}/lib" />
		<!--<mkdir dir="${Add_on_dir}/examples" />-->
		<mkdir dir="${Add_on_dir}/templates" />

		<copy todir="${Add_on_dir}">
			<fileset file="version.xml"/>
		</copy>
		<!--<copy todir="${Add_on_dir}/examples">
			<fileset dir="examples" />
		</copy>-->
		<copy todir="${Add_on_dir}/templates">
			<fileset dir="templates" />
		</copy>
		<copy todir="${Add_on_dir}/lib">
			<fileset dir="${diststarbeast2}" includes="starbeast2.addon.jar" />
			<fileset dir="${libstarbeast2}" includes="guava-23.0.jar" />
		</copy>
		<copy todir="${Add_on_dir}">
			<fileset dir="${diststarbeast2}" includes="starbeast2.src.jar" />
		</copy>

		<jar jarfile="${diststarbeast2}/starbeast2.addon.zip">
			<fileset dir="${Add_on_dir}">
				<include name="**/*" />
			</fileset>
        </jar>
		<echo message="Package version release is finished." />
	</target>

</project>
